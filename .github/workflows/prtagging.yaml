name: Auto Label PR

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  label:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Add or remove labels based on PR description
      id: label
      run: |
        # Read the PR body and store it in a variable
        PR_BODY="${{ github.event.pull_request.body }}"
        PR_NUMBER="${{ github.event.pull_request.number }}"
        REPO_NAME="${{ github.repository }}"

        # Define the mappings of checkboxes to labels
        declare -A label_map=(
          ["New feature"]="enhancement"
          ["Bug fix"]="bug"
          ["Hotfix"]="bug"
          ["Documentation update"]="documentation"
        )

        # Add a label to the PR using the GitHub API
        function add_label() {
          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO_NAME/issues/$PR_NUMBER/labels \
            -d "{\"labels\":[\"$1\"]}"
        }

        # Remove a label from the PR using the GitHub API
        function remove_label() {
          curl -s -X DELETE \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO_NAME/issues/$PR_NUMBER/labels/$1
        }

        # Get the current labels on the PR
        CURRENT_LABELS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$REPO_NAME/issues/$PR_NUMBER | jq -r '.labels[].name')

        # Loop through the label mappings and add or remove labels based on checkboxes
        for checkbox in "${!label_map[@]}"; do
          label="${label_map[$checkbox]}"
          
          if [[ "$PR_BODY" =~ "- \[x\] $checkbox" ]]; then
            # If checkbox is checked and label is not already applied, add it
            if [[ ! "$CURRENT_LABELS" =~ "$label" ]]; then
              add_label "$label"
            fi
          else
            # If checkbox is unchecked and label is applied, remove it
            if [[ "$CURRENT_LABELS" =~ "$label" ]]; then
              remove_label "$label"
            fi
          fi
        done
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
